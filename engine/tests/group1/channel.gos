package main

import "fmt"

func sum(s []int, c chan int) {
	sum := 0
	for _, v := range s {
		sum += v
	}
	c <- sum // send sum to c
}

func main() {
	s := []int{7, 2, 8, -9, 4, 0}

	c := make(chan int, 1)
	go sum(s[:len(s)/2], c)
	go sum(s[len(s)/2:], c)
	x, y := <-c, <-c // receive from c

	assert(x + y == 12)
	fmt.Println(x, y, x+y)

	
	go func() {c <- 888}()
	nn, ok := <- c
	assert(nn == 888)
	assert(ok)

	close(c)
	assert(<-c == 0)
	fmt.Println(<-c)
	m := <- c
	assert(m == 0)
	n, ok := <- c
	assert(n == 0)
	assert(!ok)

	fmt.Println(m, n, nn)
}
